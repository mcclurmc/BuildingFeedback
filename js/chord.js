
// TODO: This should be generated:
var matrix = 
    [[0,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  672,    0,  672,    112,    0,  0,  224,    224,    336,    448,    0,  112],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  220,    220,    0,  0,  0,  0,  1320,   440,    220,    220,    0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  4,  0,  0,  0,  4,  4,  0,  0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  143,    0,  143,    0,  143,    143,    286,    715,    429,    143,    0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  60, 30, 0,  0,  30, 60, 30, 0,  0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  37, 37, 0,  0,  0,  0,  74, 0,  0,  0,  0,  37],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  4,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  161,    161,    0,  0,  161,    0,  644,    483,    322,    161,    161,    161],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  300,    100,    0,  0,  400,    0,  0,  0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  60, 30, 0,  0,  30, 60, 30, 0,  0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  226,    0,  226,    0,  0,  0,  0,  113,    0,  113,    0,  113],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  32, 0,  0,  0,  0,  0,  0,  0,  0,  32, 0,  32],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8,  0,  8,  0,  0,  0,  0,  0,  0,  8,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  111,    111,    0,  37, 0,  0,  0,  0,  37, 0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  19, 19, 0,  0,  0,  0,  0,  0,  19, 0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  38, 0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  9,  0,  0,  0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  140,    140,    70, 70, 0,  0,  70, 0,  70, 0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  26, 26, 0,  0,  0,  26, 0,  0,  0,  0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  0,  0,  0,  0,  5,  0,  0,  0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  0,  0,  0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  7,  7,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  4,  0,  0,  0,  0,  4,  0,  4,  0,  0],
     [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  18, 0,  0,  0,  0,  0,  0,  18, 0,  0,  0],
     [672,   0,  0,  0,  4,  143,    0,  37, 0,  161,    0,  0,  226,    32, 8,  0,  111,    19, 0,  0,  0,  0,  140,    26, 0,  0,  7,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [0, 220,    0,  0,  0,  0,  60, 37, 0,  161,    0,  60, 0,  0,  0,  0,  111,    19, 0,  0,  0,  0,  140,    26, 5,  0,  7,  0,  18, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [672,   220,    0,  0,  4,  143,    30, 0,  0,  0,  300,    30, 226,    0,  8,  0,  0,  0,  0,  0,  0,  0,  70, 0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [112,   0,  0,  0,  0,  0,  0,  0,  0,  0,  100,    0,  0,  0,  0,  0,  37, 0,  0,  0,  0,  0,  70, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [0, 0,  0,  0,  0,  143,    0,  0,  0,  161,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [0, 0,  0,  0,  0,  143,    30, 0,  0,  0,  0,  30, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  26, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [224,   0,  0,  0,  4,  286,    60, 74, 0,  644,    400,    60, 0,  0,  0,  0,  0,  0,  0,  0,  9,  0,  70, 0,  5,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [224,   1320,   0,  0,  4,  715,    30, 0,  4,  483,    0,  30, 113,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [336,   440,    0,  0,  0,  429,    0,  0,  0,  322,    0,  0,  0,  0,  0,  0,  37, 19, 38, 0,  0,  0,  70, 0,  0,  0,  0,  0,  18, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [448,   220,    0,  0,  0,  143,    0,  0,  0,  161,    0,  0,  113,    32, 8,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [0, 220,    0,  0,  0,  0,  0,  0,  4,  161,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
     [112,   0,  0,  0,  0,  0,  0,  37, 0,  161,    0,  0,  113,    32, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0]];
// var matrix = [
//   [    0,  5871, 8916, 2868],
//   [ 1951,     0, 2060, 6171],
//   [ 8010, 16145,    0,    0],
//   [ 1013,   990,    0,    0]
// ];

matrix = [[0,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  672,    0,  672,    112,    0,  0,  224,    224,    336,    448,    0,  112],
	  [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  220,    220,    0,  0,  0,  0,  1320,   440,    220,    220,    0],
	  [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  143,    0,  143,    0,  143,    143,    286,    715,    429,    143,    0,  0],
	  [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  60, 30, 0,  0,  30, 60, 30, 0,  0,  0,  0],
	  [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  37, 37, 0,  0,  0,  0,  74, 0,  0,  0,  0,  37],
	  [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  161,    161,    0,  0,  161,    0,  644,    483,    322,    161,    161,    161],
	  [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  300,    100,    0,  0,  400,    0,  0,  0,  0,  0],
	  [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  60, 30, 0,  0,  30, 60, 30, 0,  0,  0,  0],
	  [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  226,    0,  226,    0,  0,  0,  0,  113,    0,  113,    0,  113],
	  [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  111,    111,    0,  37, 0,  0,  0,  0,  37, 0,  0,  0],
	  [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  19, 19, 0,  0,  0,  0,  0,  0,  19, 0,  0,  0],
	  [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  38, 0,  0,  0],
	  [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  140,    140,    70, 70, 0,  0,  70, 0,  70, 0,  0,  0],
	  [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  26, 26, 0,  0,  0,  26, 0,  0,  0,  0,  0,  0],
	  [672,   0,  143,    0,  37, 161,    0,  0,  226,    111,    19, 0,  140,    26, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
	  [0, 220,    0,  60, 37, 161,    0,  60, 0,  111,    19, 0,  140,    26, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
	  [672,   220,    143,    30, 0,  0,  300,    30, 226,    0,  0,  0,  70, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
	  [112,   0,  0,  0,  0,  0,  100,    0,  0,  37, 0,  0,  70, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
	  [0, 0,  143,    0,  0,  161,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
	  [0, 0,  143,    30, 0,  0,  0,  30, 0,  0,  0,  0,  0,  26, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
	  [224,   0,  286,    60, 74, 644,    400,    60, 0,  0,  0,  0,  70, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
	  [224,   1320,   715,    30, 0,  483,    0,  30, 113,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
	  [336,   440,    429,    0,  0,  322,    0,  0,  0,  37, 19, 38, 70, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
	  [448,   220,    143,    0,  0,  161,    0,  0,  113,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
	  [0, 220,    0,  0,  0,  161,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
	  [112,   0,  0,  0,  37, 161,    0,  0,  113,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0]];


var chord = d3.layout.chord()
    .padding(.05)
    .sortSubgroups(d3.descending)
    .matrix(matrix);

var width = 1200,
height = 900,
innerRadius = Math.min(width, height) * .25,
outerRadius = innerRadius * 1.1;

var fill = d3.scale.category20()

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
    .append("g")
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

svg.append("g").selectAll("path")
    .data(chord.groups)
    .enter().append("path")
    .style("fill", function(d) { return fill(d.index); })
    .style("stroke", function(d) { return fill(d.index); })
    .attr("d", d3.svg.arc().innerRadius(innerRadius)
          .outerRadius(outerRadius))
    .on("mouseover", fade(.1))
    .on("mouseout", fade(1));

var ticks = svg.append("g").selectAll("g")
    .data(chord.groups)
    .enter().append("g").selectAll("g")
    .data(groupTicks)
    .enter().append("g")
    .attr("transform", function(d) {
        return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")"
            + "translate(" + outerRadius + ",0)";
    });

ticks.append("line")
    .attr("x1", 1)
    .attr("y1", 0)
    .attr("x2", 5)
    .attr("y2", 0)
    .style("stroke", "#000");

ticks.append("text")
    .attr("x", 8)
    .attr("dy", ".35em")
    .attr("transform", function(d) {
	return d.angle > Math.PI ? "rotate(180)translate(-16)" : null;
    })
    .style("text-anchor", function(d) { return d.angle > Math.PI ? "end" : null; })
    .text(function(d) { return d.label; });

svg.append("g")
    .attr("class", "chord")
    .selectAll("path")
    .data(chord.chords)
    .enter().append("path")
    .attr("d", d3.svg.chord().radius(innerRadius))
    .style("fill", function(d) { return fill(d.target.index); })
    .style("opacity", 1);

// Returns an array of tick angles and labels, given a group.
function groupTicks(d) {
    var labels =
	["Chilled beam", "AHU", "Passivent", "Window", "Electrical socket",
	 "Lighting hardware", "Walls/ceiling", "Window", "Lighting controls",
	 "Exterior doors", "Lift", "Tap", "Interior doors", "Data outlet",
	 "Client brief", "Specification", "System Design", "Value Engineering",
	 "Component Design ", "Contractor Substitution", "Construction Quality",
	 "Commissioning", "Component Failure", "Training", "Documentation",
	 " Client Decision"]

    var k = (d.endAngle - d.startAngle)
    return [ {
        angle: k * .5 + d.startAngle,
        label: labels[d.index]
    } ] ;
}

// Returns an event handler for fading a given chord group.
function fade(opacity) {
    return function(g, i) {
        svg.selectAll(".chord path")
            .filter(function(d) { return d.source.index != i && d.target.index != i; })
            .transition()
            .style("opacity", opacity);
    };
}

